[
["index.html", "EDLD 610 Final Project: Visualizing Star Wars 1 Introduction", " EDLD 610 Final Project: Visualizing Star Wars Cameron S. Kay 1 Introduction Welcome! This portfolio shows the construction of three different visualizations of the Star Wars universe. The first visualization shows the relationship between average character age and gender. The second visualization reveals how starship classes differ in terms of length. The third visualization shows the distance of Star War’s planet from their host stars, with planets from our solar system included for easy comparison. All the data is from the repurrrsive package. The repurrrsive package includes various datasets to assist in the teaching of R. The Star Wars dataset is originally from SWAPI (e.g., the Star Wars API). "],
["people.html", "2 The People 2.1 The Data 2.2 The Visualization", " 2 The People 2.1 The Data # load and format data people &lt;- data.frame(t(list.cbind(sw_people))) %&gt;% # convert the star wars people dataframe to a tibble as_tibble() %&gt;% # select only the columns between name and gender (inclusive) select(name:gender) %&gt;% # mutates columns that are lists to non-lists mutate_if(is.list, ~(unlist(.))) %&gt;% # mutate all columns and replaces the text &quot;unknown&quot; with &quot;NA&quot; mutate_all(~(na_if(., &quot;unknown&quot;))) %&gt;% # converts height and mass to numeric variables mutate_at(vars(height, mass), ~(as.numeric(.))) %&gt;% # extracts birth year and converts it to numeric; replace &quot;n/a&quot; values with # droid for hair_color and gender mutate(birth_year = parse_number(as.character(birth_year)), hair_color = if_else(gender == &quot;n/a&quot;, &quot;droid&quot;, hair_color), gender = if_else(gender == &quot;n/a&quot;, &quot;droid&quot;, gender)) # look at first ten rows of tidied dataet head(people, n = 10L) ## # A tibble: 10 x 8 ## name height mass hair_color skin_color eye_color birth_year gender ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 Luke Sky… 172 77 blond fair blue 19 male ## 2 C-3PO 167 75 droid gold yellow 112 droid ## 3 R2-D2 96 32 droid white, bl… red 33 droid ## 4 Darth Va… 202 136 none white yellow 41.9 male ## 5 Leia Org… 150 49 brown light brown 19 female ## 6 Owen Lars 178 120 brown, gr… light blue 52 male ## 7 Beru Whi… 165 75 brown light blue 47 female ## 8 R5-D4 97 32 droid white, red red NA droid ## 9 Biggs Da… 183 84 black light brown 24 male ## 10 Obi-Wan … 182 77 auburn, w… fair blue-gray 57 male 2.2 The Visualization # people plot people %&gt;% # filter for only females and males filter(gender == &quot;female&quot; | gender == &quot;male&quot;) %&gt;% # group by gender group_by(gender) %&gt;% # calculate mean age and rounded mean age for geom_text summarise(m_age = mean(birth_year, na.rm = TRUE), m_age_r = round(m_age, 2), m_age_r = paste(m_age_r, &quot;YEARS&quot;)) %&gt;% # convert genders to title case and gender to a factor mutate(gender = str_to_title(gender), gender = as.factor(gender)) %&gt;% # plot gender vs age and fill by gender ggplot(aes(x = gender, y = m_age, fill = gender)) + # add the lightsaber blades to the plot geom_saberblade() + # add the lightsaber hilts to the plot geom_saberhilt(column = 1) + geom_saberhilt(column = 2) + # set colour and fill values (i.e., red and green) scale_fill_manual(values = c(&quot;#0FFF00&quot;, &quot;#FF0000&quot;)) + scale_colour_manual(values = c(&quot;#0FFF00&quot;, &quot;#FF0000&quot;)) + # add text with the mean ages to the plot geom_text(aes(label = m_age_r, color = gender), size = 6, position = position_nudge(x = -.09, y = -8)) + # add labels labs(title = &quot;Average age and gender&quot;, y = &quot;Age (years)&quot;, x = &quot;Gender&quot;, legend = &quot;Gender&quot;, caption = &quot;Data from https://swapi.co.&quot;) + # customize using my theme my_theme() + # flip the coordinates coord_flip() 2.2.0.1 Idea Although not a great data/ink ratio, I believe the above figure would be memorable in displaying the ages of the characters in Star Wars. I would like to add more design elements to the plot (e.g., a more detailed lightsaber hilt, a glow on top of the saber). It think it would also be informative to add some text labels showing the actual ages of characters beside the bars. Yoda is also an outlier, so it may be appropriate to eliminate him from the plot. 2.2.0.2 Intended Audience The intended audience for this visualization are fans of Star Wars and the general public. 2.2.0.3 Intended Message Other than wanting to convey the average difference in ages among genders in the Star Wars universe, I think it is important to consider that the mean age of the female characters is so young compared to that of the male characters. It seems the recent movies have taken both incidental (e.g., Carrier Fisher) and deliberate (e.g., Laura Dern) steps to include older women. Star Wars would certainly benefit from being more inclusive when it comes to casting. "],
["ships.html", "3 The Starships 3.1 The Data 3.2 The Visualization", " 3 The Starships 3.1 The Data # load and format data starships &lt;- data.frame(t(list.cbind(sw_starships))) %&gt;% # convert the star ways starship dataset to a tibble as_tibble() %&gt;% # clean column names janitor::clean_names() %&gt;% # select only those columns between name and starship (inclusive) select(name:starship_class) %&gt;% # mutate columns that are lists to non-lists mutate_if(is.list, ~(unlist(.))) %&gt;% # mutate all columns, replacing &quot;unknown&quot; with &quot;NA&quot; mutate_all(~(na_if(., &quot;unknown&quot;))) %&gt;% # convert numeric columns to numerics mutate_at(vars(cost_in_credits, length, crew, passengers, cargo_capacity, hyperdrive_rating, mglt), ~(as.numeric(.))) %&gt;% # extract the max_atmosphering_speed and convert starship_class to a lowercase # factor mutate(max_atmosphering_speed = parse_number(max_atmosphering_speed), starship_class = as.factor(tolower(starship_class))) %&gt;% # seperate consumables into a value and unit (e.g., days, weeks, months, # years) separate(consumables, c(&quot;con_n&quot;, &quot;con_unit&quot;), sep = &quot; &quot;) %&gt;% # convert units to numeric values and multiply with the consumable value to # provide the amount of consumable in the total number of days mutate(con_unit = case_when(con_unit == &quot;day&quot; ~ &quot;1&quot;, con_unit == &quot;week&quot; ~ &quot;7&quot;, con_unit == &quot;month&quot; ~ &quot;30&quot;, con_unit == &quot;years&quot; ~ &quot;365&quot;), consumables = as.numeric(con_n) * as.numeric(con_unit)) %&gt;% # retain only the new consumables column (i.e., drop con_n and con_unit) select(-starts_with(&quot;con_&quot;)) # look at first ten rows of tidied dataet head(starships, n = 10L) ## # A tibble: 10 x 13 ## name model manufacturer cost_in_credits length max_atmospherin… crew ## &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Sent… Sent… Sienar Flee… 240000 3.80e1 1000 5 ## 2 Deat… DS-1… Imperial De… 1000000000000 1.20e5 NA 342953 ## 3 Mill… YT-1… Corellian E… 100000 3.44e1 1050 4 ## 4 Y-wi… BTL … Koensayr Ma… 134999 1.40e1 1000 2 ## 5 X-wi… T-65… Incom Corpo… 149999 1.25e1 1050 1 ## 6 TIE … Twin… Sienar Flee… NA 9.20e0 1200 1 ## 7 Exec… Exec… Kuat Drive … 1143350000 NA NA 279144 ## 8 Slav… Fire… Kuat System… NA 2.15e1 1000 1 ## 9 Impe… Lamb… Sienar Flee… 240000 2.00e1 850 6 ## 10 EF76… EF76… Kuat Drive … 8500000 3.00e2 800 854 ## # … with 6 more variables: passengers &lt;dbl&gt;, cargo_capacity &lt;dbl&gt;, ## # hyperdrive_rating &lt;dbl&gt;, mglt &lt;dbl&gt;, starship_class &lt;fct&gt;, ## # consumables &lt;dbl&gt; 3.2 The Visualization # generate random x, y, and transparency data to use for plotting stars stars_data &lt;- tibble(x = sample(seq(from = 0, to = 4, by = .0001), 500), y = sample(seq(from = 0, to = 80, by = .0001), 500), trans = sample(seq(from = .1, to = .9, by = .0001), 500)) # starships plot starships %&gt;% # group by starship_class group_by(starship_class) %&gt;% # drop rows that have an NA for length filter(!is.na(length)) %&gt;% # calculate mean length and standard deviation, as well as number of ships in # that class summarize(len_m = mean(length), len_sd = sd(length), len_n = n()) %&gt;% # retain classes that have more than one ship filter(len_n &gt; 1) %&gt;% # convert starship_class to title case and wrap multi-word levels mutate(starship_class = str_to_title(starship_class), starship_class = gsub(&quot; &quot;, &quot; \\n&quot;, starship_class)) %&gt;% # calculate standard error mutate(len_se = len_sd / sqrt(len_n)) %&gt;% # plot starship class v starship length ggplot(aes(x = fct_reorder(starship_class, desc(len_m)), y = len_m)) + # add error bars geom_errorbar(aes(ymin = len_m - (len_se * qnorm(.975)), ymax = len_m + (len_se * qnorm(.975))), width = .5, colour = &quot;grey30&quot;, lwd = 1.2) + # add stars geom_point(data = stars_data, aes(x = x, y = y, alpha = trans), colour = &quot;white&quot;, size = .001) + # plot ship body points geom_point(size = 6, colour = &quot;grey30&quot;) + geom_point(size = 3, colour = &quot;grey10&quot;) + geom_point(size = 4, colour = &quot;grey60&quot;, shape = 13) + # flip the coordinates coord_flip() + # add labels labs(title = &quot;Average length of starship by ship class&quot;, y = &quot;Average Length in Meters&quot;, x = &quot;Class&quot;, caption = &quot;Data from https://swapi.co.&quot;) + # set y-axis limits and do not show value beyond limits of y-axis scale_y_continuous(limits = c(0,80), expand = expand_scale(mult = c(0, 0))) + # customize using my theme my_theme() 3.2.0.1 Idea Points and standard error bars have always looked like Tie Fighters to me, so I decided I would try to plot the length of a starship against the starship class. As would be expected yachts are the largest ships with assult starfighters being slightly larger than basic starfighters. Although I am quite happy with the plot, I believe the fonts and text elements could be greatly improved. Representing all ships as Tie Fighters also may be misleading. 3.2.0.2 Intended Audience Again, the intended audience for this visualization are people who like Star Wars. To appreciate the error bars some knowledge of statistics would likely be needed, as well. 3.2.0.3 Intended Message That starship lengths differ by class and that the length of a yacht starship is far more variable than other starship classes. "],
["planets.html", "4 The Planets", " 4 The Planets 4.0.1 The Data # load and format data planets &lt;- data.frame(t(list.cbind(sw_planets))) %&gt;% # convert star wars planets dataset to a tibble as.tibble() %&gt;% # retain only columns between name and population (inclusive) select(name:population) %&gt;% # mutate columns that are lists to non-lists mutate_if(is.list, ~(unlist(.))) %&gt;% # mutate all columns, replacing &quot;unknown&quot; with &quot;NA&quot; mutate_all(~(na_if(., &quot;unknown&quot;))) %&gt;% # convert numeric columns to type numeric mutate_at(vars(rotation_period, orbital_period, diameter, surface_water, population), ~(as.numeric(.))) %&gt;% # calculate values of interest mutate( # make surface water a proportion surface_water = surface_water / 100, # calculate population in millions population_mils = population / 1000000, # calculate a planet&#39;s distance from the sun (Kepler&#39;s 3rd law) au = (((orbital_period / 365) ^ 2) ^ (1/3)), # convert gravity to a number gravity = parse_number(as.character(gravity)), # calculate the force of gravity g = gravity * 9.8, # calculate radius radius = diameter / 2, # calculate planet mass (ish) mass = (g * (radius^2)) / grav_constant, # calculate planet area area = pi * (radius^2)) # look at first ten rows of tidied dataet head(planets, n = 10L) ## # A tibble: 10 x 15 ## name rotation_period orbital_period diameter climate gravity terrain ## &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 Alde… 24 364 12500 temper… 1 grassl… ## 2 Yavi… 24 4818 10200 temper… 1 jungle… ## 3 Hoth 23 549 7200 frozen 1.1 tundra… ## 4 Dago… 23 341 8900 murky NA swamp,… ## 5 Besp… 12 5110 118000 temper… 1.5 gas gi… ## 6 Endor 18 402 4900 temper… 0.85 forest… ## 7 Naboo 26 312 12120 temper… 1 grassy… ## 8 Coru… 24 368 12240 temper… 1 citysc… ## 9 Kami… 27 463 19720 temper… 1 ocean ## 10 Geon… 30 256 11370 temper… 0.9 rock, … ## # … with 8 more variables: surface_water &lt;dbl&gt;, population &lt;dbl&gt;, ## # population_mils &lt;dbl&gt;, au &lt;dbl&gt;, g &lt;dbl&gt;, radius &lt;dbl&gt;, mass &lt;dbl&gt;, ## # area &lt;dbl&gt; 4.0.2 The Visualization # planets plot planets %&gt;% # select only variables of interest select(name, au, radius) %&gt;% # drop planets that do not have (1) a name, (2) a distance from the sun (i.e. # an AU), (3) an AU less than 2, and (4) a radius greater than 0. filter(!is.na(name), !is.na(au), # au &lt; 2, radius != 0.00) %&gt;% # create a new variable indicating whether a planet was in the original # trilogy mutate(orig_tril = case_when(name == &quot;Alderaan&quot; | name == &quot;Tatooine&quot; | name == &quot;Yavin&quot; | name == &quot;Yavin 4&quot; ~ &quot;new_hope&quot;, name == &quot;Bespin&quot; | name == &quot;Dagobah&quot; | name == &quot;Hoth&quot; ~ &quot;empire_strikes&quot;, name == &quot;Endor&quot; ~ &quot;return_jedi&quot;, TRUE ~ NA_character_)) %&gt;% # sort the data by their distance from the sun arrange(au) %&gt;% # add a column that arbitrarily assigns the planet a degree mutate(degree = seq(from = 1, to = 360, length.out = n())) %&gt;% # plot the planets distance from the sun against their arbitrary degree ggplot(aes(x = degree, y = au)) + # add labels indicating y-axis units and add star and earth geom_text(aes(x = 0, y = 0, label = &quot;STAR&quot;), color = &quot;deeppink3&quot;, size = 7) + geom_text(aes(x = 270, y = 2, label = &quot;2 AU&quot;), color = &quot;deeppink3&quot;, size = 7) + geom_text(aes(x = 270, y = 4, label = &quot;4 AU&quot;), color = &quot;deeppink3&quot;, size = 7) + geom_text(aes(x = 270, y = 6, label = &quot;6 AU&quot;), color = &quot;deeppink3&quot;, size = 7) + # add solar system planets geom_text(aes(x = 0, y = 1.00, label = &quot;EARTH&quot;), color = &quot;deeppink3&quot;, size = 5) + geom_text(aes(x = 0, y = 1.52, label = &quot;MARS&quot;), color = &quot;deeppink3&quot;, size = 5) + geom_text(aes(x = 0, y = 5.20, label = &quot;JUPITER&quot;), color = &quot;deeppink3&quot;, size = 5) + # add planet points; map size of the point to planet radius geom_point(aes(size = radius), alpha = .6, color = &quot;#00ddff&quot;) + # make the coordinate polar coord_polar(theta = &quot;x&quot;) + # set the limit of size values scale_size_continuous(range = c(.5, 10)) + # drop x-axis grid marks and breaks scale_x_continuous(breaks = NULL) + # set 2-axis limit scale_y_continuous(limits = c(0,7)) + # add labels labs(title = &quot;Distance of Star War&#39;s Planets from their Host Stars&quot;, subtitle = &quot;in Astronomical Units (AU)&quot;, caption = &quot;Data from https://swapi.co.&quot;) + # customize using my theme my_theme() + # drop axis text and axis titles and center title, subtitle, and caption theme(plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5), plot.caption = element_text(hjust = 0.5), axis.text = element_blank(), axis.title = element_blank(), plot.margin = unit(c(1, 2, 1, 2), &quot;cm&quot;)) + # add text identifying only those planetss from the original trilogy geom_label_repel(data = . %&gt;% filter(!is.na(orig_tril)), aes(label = name), color = &quot;#00ddff&quot;, fill = NA, size = 8, min.segment.length = 0, nudge_y = 2.1) 4.0.2.1 Idea As interesting as I found the data in the first two plots, I think several plots could be devoted to the planets dataset. Specifically, the visualizations could be framed around the common theme of astronomy, serving as an instructive tool for teaching concepts from astronomy (e.g., Keppler’s third law, calculations of gravitational force). The present plot shows the relationship between a planet’s surface water and its distance from the sun. I would like to add a solar system dataset to the Starwar’s planets dataset and use facetwrap to provide a side by side comparison of fictional and non-fictional planets. 4.0.2.2 Intended Audience Fans of Star Wars or anyone who has an interest in astronomy or phyics. 4.0.2.3 Intended Message Planets farther from the sun seem to have more surface water, which seems to be consistent with our solar system. "]
]
